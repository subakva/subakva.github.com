<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Subakva Teknika]]></title>
  <link href="http://subakva.github.com/atom.xml" rel="self"/>
  <link href="http://subakva.github.com/"/>
  <updated>2012-03-25T15:32:55-04:00</updated>
  <id>http://subakva.github.com/</id>
  <author>
    <name><![CDATA[Jason Wadsworth]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[None]]></title>
    <link href="http://subakva.github.com/blog/2012/01/15/federal-reserve-bank-of-boston-taken-with-instagram/"/>
    <updated>2012-01-15T09:24:59-05:00</updated>
    <id>http://subakva.github.com/blog/2012/01/15/federal-reserve-bank-of-boston-taken-with-instagram</id>
    <content type="html"><![CDATA[<p><img src="http://www.tumblr.com/photo/1280/subakva/15884659363/1/tumblr_lxug1nl7Xr1qzbsqk" alt="" /></p>

<p>Federal Reserve Bank of Boston (Taken with <a href="http://instagr.am">instagram</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review: HTML5 Cookbook by Christopher Schmitt, Kyle Simpson]]></title>
    <link href="http://subakva.github.com/blog/2012/01/08/book-review-html5-cookbook-by-christopher-schmitt-kyle-simpson/"/>
    <updated>2012-01-08T22:52:37-05:00</updated>
    <id>http://subakva.github.com/blog/2012/01/08/book-review-html5-cookbook-by-christopher-schmitt-kyle-simpson</id>
    <content type="html"><![CDATA[<p><img src="http://media.tumblr.com/tumblr_lxaxd8WzPh1qzzhm0.gif" alt="" /></p>

<h4>Summary</h4>

<p><a href="http://shop.oreilly.com/product/0636920016038.do">HTML5 Cookbook</a> provides an overview and examples of new HTML 5 features and related JavaScript APIs. The cookbook series aims to provide short, targeted chapters that solve real world problems, and for simple use-cases, this book provides that.</p>

<p>Most of the material in the book could be found in online tutorials, but it provides a good overview of the available technologies in a single place. I wouldn&#8217;t recommend this for developers who are already using/familiar with HTML 5, but it could be a great foundation for newbies who want to absorb a lot quickly. Personally, I felt that I had a solid foundation to start working with HTML 5 technologies after reading through the examples.</p>

<h4>In a Nutshell:</h4>

<ul>
<li><p>Good compilation of intro material for HTML 5 and friends.</p></li>
<li><p>Filled with useful internet references.</p></li>
<li><p>Recipes are rather basic, but complete and well-written.</p></li>
<li><p>Great coverage of accessibility issues.</p></li>
<li><p>Probably less useful once the basics are understood.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review: A Bug Hunter's Diary by Tobias Klein; O'Reilly Media]]></title>
    <link href="http://subakva.github.com/blog/2011/11/23/book-review-a-bug-hunters-diary-by-tobias-klein-oreilly-media/"/>
    <updated>2011-11-23T13:32:20-05:00</updated>
    <id>http://subakva.github.com/blog/2011/11/23/book-review-a-bug-hunters-diary-by-tobias-klein-oreilly-media</id>
    <content type="html"><![CDATA[<p><img src="http://media.tumblr.com/tumblr_luxtvovtYx1qzzhm0.gif" alt="" /></p>

<h4>Summary</h4>

<p><a href="http://shop.oreilly.com/product/9781593273859.do">A Bug Hunter&#8217;s Diary</a> describes the technical details of how the author identified and analyzed software security bugs. It doesn&#8217;t get into exploiting the bugs because, as the author points out at the end of every chapter, it&#8217;s illegal to publish exploits in Germany.</p>

<p>I expected a light treatment based on the cute title and cover, but it was mostly C code, debuggers and assembly. I was a little out of my element, but it was interesting. The appendices explaining how stack overflows, etc. can occur and how they can be exploited (roughly) were helpful and interesting. The bug diaries were a little repetitive, but they at least covered a range of platforms.</p>

<h4>Other Notes</h4>

<p>The book is lacking one major piece of the puzzle: details on exploiting these security bugs. After all the work understanding the bug and the details, it was always a bit of a letdown when their was no working exploit as a payoff. According to the author, his home country, Germany, passed a law making it illegal to publish exploits for bugs. Given the ease of finding that information on the internet, I&#8217;d guess that the single major effect of that law is to make this book less useful, which is a real shame.</p>

<p>In addition to the technical details, the author outlines the process of reporting and resolving bugs. It was interesting to see that commercial software vendors seem to be consistently orders of magnitude slower in releasing patches for security issues. I suppose one could argue that means that open-source software is safer, but at the end of the day, it&#8217;s always up to the end user to keep their software updated and patched.</p>

<h4>Bottom Line</h4>

<p>You&#8217;ll need some understanding of assembly, c, and how memory allocation works. But that background, the book and a bit of Googling to learn more about how the exploits work make for a solid, entertaining overview of the life cycle of security bugs.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book Review: Test-Driven Infrastructure with Chef by Stephen Nelson-Smith; O'Reilly Media]]></title>
    <link href="http://subakva.github.com/blog/2011/11/09/book-review-test-driven-infrastructure-with-chef-by-stephen-nelson-smith-oreilly-media/"/>
    <updated>2011-11-09T21:41:00-05:00</updated>
    <id>http://subakva.github.com/blog/2011/11/09/book-review-test-driven-infrastructure-with-chef-by-stephen-nelson-smith-oreilly-media</id>
    <content type="html"><![CDATA[<p><img src="http://media.tumblr.com/tumblr_lufbogviud1qzzhm0.gif" alt="" /></p>

<h4>Summary</h4>

<p><a href="http://shop.oreilly.com/product/0636920020042.do">Test-Driven Infrastructure with Chef</a> describes a rationale and an approach to developing automated tests for system infrastructure. It includes an explanation of behavior-driven development, and detailed instructions for setting up a testing system using <a href="https://github.com/Atalanta/cucumber-chef">cucumber-chef</a> on EC2.</p>

<h4>Audience</h4>

<p>Surprisingly little time was spent talking about cucumber-chef and how to use it. The majority of the book is spent explaining BDD and why you&#8217;d want to apply it to infrastructure, and then explaining in minute detail the process to get <a href="https://rvm.beginrescueend.com/">RVM</a>, <a href="http://aws.amazon.com/ec2/">EC2</a> and <a href="http://www.opscode.com/chef/">Chef</a> configured. The last portion of the book covered the process of using <a href="https://github.com/Atalanta/cucumber-chef">cucumber-chef</a> to set up a server with multiple user accounts.</p>

<p>Being already familiar with the supporting tools, I found this disappointing. The teamserver example was too simple and unrealistic. It would have been more useful to see some examples using cucumber-chef for a more realistic use-case, such as setting up a web server.</p>

<p>Unfortunately, I suspect the text isn&#8217;t likely to be helpful to a reader who <em>isn&#8217;t</em> familiar with the tools either. The instructions were already outdated when I read them, shortly after the book was released. A reader who is new to Cucumber, Chef, Ruby or EC2 will be in danger of getting lost before they even get to the point where they can run a test against an instance.</p>

<h4>Practicality</h4>

<p>In the course of working through the examples, I was continually frustrated by the amount of time it took to get feedback. The tests are really slow. It&#8217;s hard to imagine actually developing red/green/refactor-style at this pace. I like the concept of being able to test the infrastructure, but it doesn&#8217;t seem practical with these tools.</p>

<p>I&#8217;m not convinced that it would really be worth the time involved to write tests at this level anyway. Writing integration tests against the full application stack might be a better use of your testing time. The true test of the infrastructure is how well it supports needs of the application and it&#8217;s users.</p>

<p>Neither BDD-style infrastructure tests nor full-stack integration tests will help you with the most difficult and interesting infrastructure challenges: scaling and stability. Simulating all the wonderful ways that a server can crash (used up disk space, hung connections, etc.) would be a complex, difficult, slow, and inevitably incomplete endeavor. It&#8217;s possible that server ops really is fundamentally different than application development.</p>

<h4>Bottom Line</h4>

<ul>
<li><p>Good explanation of BDD and how it could be applied to infrastructure</p></li>
<li><p>Short on useful examples for readers familiar with the supporting tools</p></li>
<li><p>Thorough instructions for setting up EC2, Chef and RVM, but likely to have a short shelf-life</p></li>
</ul>


<p>Available from  O&#8217;Reilly: <a href="http://shop.oreilly.com/product/0636920020042.do">Test-Driven Infrastructure with Chef</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The Mother of All Interview Questions - raganwald's posterous]]></title>
    <link href="http://subakva.github.com/blog/2011/08/02/the-mother-of-all-interview-questions-raganwalds-posterous/"/>
    <updated>2011-08-02T14:43:29-04:00</updated>
    <id>http://subakva.github.com/blog/2011/08/02/the-mother-of-all-interview-questions-raganwalds-posterous</id>
    <content type="html"><![CDATA[<p><a href="http://raganwald.posterous.com/the-mother-of-all-interview-questions">The Mother of All Interview Questions - raganwald&#8217;s posterous</a></p>

<p>&#8220;Does your process involve invention? â€¦ &#8221; This is a great interview question. It&#8217;s a conversation starter, and it&#8217;s both relevant to evaluating a candidate and, hopefully, an interesting question for the interviewee to consider.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Making applications scalable with Load Balancing]]></title>
    <link href="http://subakva.github.com/blog/2011/07/29/making-applications-scalable-with-load-balancing/"/>
    <updated>2011-07-29T09:32:03-04:00</updated>
    <id>http://subakva.github.com/blog/2011/07/29/making-applications-scalable-with-load-balancing</id>
    <content type="html"><![CDATA[<p><a href="http://1wt.eu/articles/2006_lb/">Making applications scalable with Load Balancing</a></p>

<p>Old but useful article about load balancing issues by the author of HAProxy</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jay Fields' Thoughts: The High-Level Test Whisperer]]></title>
    <link href="http://subakva.github.com/blog/2011/07/22/jay-fields-thoughts-the-high-level-test-whisperer/"/>
    <updated>2011-07-22T09:57:19-04:00</updated>
    <id>http://subakva.github.com/blog/2011/07/22/jay-fields-thoughts-the-high-level-test-whisperer</id>
    <content type="html"><![CDATA[<p><a href="http://blog.jayfields.com/2011/07/high-level-test-whisperer.html?utm_source=feedburner&amp;utm_medium=feed&amp;utm_campaign=Feed:%20jayfields/mjKQ%20(Jay%20Fields%20Thoughts">Jay Fields&#8217; Thoughts: The High-Level Test Whisperer</a>)</p>

<p>Two key takeaways from this post:</p>

<ul>
<li><p>Sometimes it&#8217;s better to clobber an unmaintainable test suite and start over with something simple and focused on maximizing value.</p></li>
<li><p>Maintenance of high-level tests might be a sensible place to break from the shared code-ownership principle.</p></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Temporarily Change the Rails Environment]]></title>
    <link href="http://subakva.github.com/blog/2011/03/17/temporarily-change-the-rails-environment/"/>
    <updated>2011-03-17T14:00:29-04:00</updated>
    <id>http://subakva.github.com/blog/2011/03/17/temporarily-change-the-rails-environment</id>
    <content type="html"><![CDATA[<p>A helper method to change the Rails environment within a block. I use this for testing isolated, environment-specific methods. Obviously, I wouldn&#8217;t suggest using this outside of test code. You could easily do something very stupid.</p>

<pre><code>&lt;code&gt;
def with_rails_env(environment, &amp;block)
  begin
    original_env = Rails.env
    Rails.instance_variable_set(:@_env, environment)
    yield if block_given?
  ensure
    Rails.instance_variable_set(:@_env, original_env)
  end
end
&lt;/code&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shady Characters - The secret life of punctuation]]></title>
    <link href="http://subakva.github.com/blog/2011/03/12/shady-characters-the-secret-life-of-punctuation/"/>
    <updated>2011-03-12T14:57:48-05:00</updated>
    <id>http://subakva.github.com/blog/2011/03/12/shady-characters-the-secret-life-of-punctuation</id>
    <content type="html"><![CDATA[<p><a href="http://www.shadycharacters.co.uk/2010/12/hello-world/">Shady Characters - The secret life of punctuation</a></p>

<p>Proving once again the breadth of my geekdom, I&#8217;m really enjoying this blog about the history of punctuation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ActiveRecord Join Table Gotcha]]></title>
    <link href="http://subakva.github.com/blog/2011/03/11/activerecord-join-table-gotcha/"/>
    <updated>2011-03-11T20:10:30-05:00</updated>
    <id>http://subakva.github.com/blog/2011/03/11/activerecord-join-table-gotcha</id>
    <content type="html"><![CDATA[<p>Whenever I create join tables, I&#8217;m always tempted to add an ID column, in case I want to upgrade it to a :through association at some point. I&#8217;m also tempted to timestamp columns, so that I can know when the association was created.</p>

<p>Sadly, it just doesn&#8217;t work with <code>has_and_belongs_to_many</code>.</p>

<ul>
<li><p>If you add an ID column, Rails will choke as soon as you try to access it. IDs are not allowed!</p></li>
<li><p>If you add timestamps, Rails will make all of your association records readonly.</p></li>
</ul>


<p>If you want to have an ID and timestamps, you&#8217;ll just have to bite the bullet and create an association model and a <code>has_many :through</code> relationship.</p>

<p>Maybe now that I&#8217;ve written about it, I&#8217;ll remember it next time and save myself debugging mysterious <code>"ActiveRecord::ReadOnlyRecord: ActiveRecord::ReadOnlyRecord"</code> errors.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL Mass Destruction with xargs]]></title>
    <link href="http://subakva.github.com/blog/2011/02/15/mysql-mass-destruction-with-xargs/"/>
    <updated>2011-02-15T22:02:52-05:00</updated>
    <id>http://subakva.github.com/blog/2011/02/15/mysql-mass-destruction-with-xargs</id>
    <content type="html"><![CDATA[<p>Yesterday, I needed to clobber a bunch of similarly-named database schemas on my development machine. I could have selected and deleted 40 times in Navicat, but I thought I&#8217;d try to write a one-liner instead:</p>

<p>`</p>

<p>mysql -u root -e &#8220;show databases;&#8221; | grep _3_6 | xargs -IDB_NAME mysql -u root -e &#8220;drop database DB_NAME;&#8221;<br/>
`</p>

<p>The first part pulls the database names all the database names. The second part culls any schema names that don&#8217;t match &#8220;_3_6&#8221;, and the last part executes a DROP DATABASE command for each matching schema name.</p>

<p>The clever bit is the &#8220;-I&#8221; flag to xargs, which sets a token to be replaced with the argument in the command string. In this case, the schema name (&#8220;pp_development_3_6&#8221;) is dropped in wherever xargs sees the string &#8220;DB_NAME&#8221; in the command.</p>

<p>_<a href="http://en.wikipedia.org/wiki/PWB/UNIX">Wikipedia attributes the xargs utility to PWB/UNIX</a>. It may have been written by <a href="http://www.ugu.com/sui/ugu/showclassic?I=info.Dick_Haight">Dick Haight</a>, who is, apparently, the 10 of Clubs in the <a href="http://www.ugu.com/sui/ugu/showclassic?I=info.usenix-cards">Unix 25th Anniversary Playing Card deck</a>, which, apparently, exists.<br/>
_</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ShareableRouteSet - Gist]]></title>
    <link href="http://subakva.github.com/blog/2010/09/01/shareablerouteset-gist/"/>
    <updated>2010-09-01T11:24:02-04:00</updated>
    <id>http://subakva.github.com/blog/2010/09/01/shareablerouteset-gist</id>
    <content type="html"><![CDATA[<p><a href="http://gist.github.com/556374">ShareableRouteSet - Gist</a></p>

<p>This is a class to allow the creation of Rails route helpers for external applications without interfering with the application routes.</p>

<p>This is useful when you have a Rails application that needs to have some knowledge about the routes in another application. The routes could be published by the source application in a plugin/gem to avoid duplication of routing information.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Find and Concatenate Files with Spaces]]></title>
    <link href="http://subakva.github.com/blog/2010/09/01/find-and-concatenate-files-with-spaces/"/>
    <updated>2010-09-01T11:19:45-04:00</updated>
    <id>http://subakva.github.com/blog/2010/09/01/find-and-concatenate-files-with-spaces</id>
    <content type="html"><![CDATA[<p>Normally, xargs will interpret the spaces in the filenames as separate files. The <code>-print0</code> argument to find paired with the <code>-0</code> argument to xargs will use some other magical delimiter so that the spacey filenames remain intact as you pipe them around.</p>

<p>`</p>

<p>find ./spacey_files -name <em>Report</em> -type f -print0 | xargs -0 cat > all_reports.csv<br/>
`</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bulk Update Github Hooks]]></title>
    <link href="http://subakva.github.com/blog/2010/04/22/bulk-update-github-hooks/"/>
    <updated>2010-04-22T14:39:11-04:00</updated>
    <id>http://subakva.github.com/blog/2010/04/22/bulk-update-github-hooks</id>
    <content type="html"><![CDATA[<p>The Github API doesn&#8217;t support updating hooks, but I&#8217;ve got way too many projects going to do it by hand. I wrote up this script to update all of my hooks at once. I used the <a href="http://mechanize.rubyforge.org/mechanize/">mechanize</a> gem to drive the web admin interface for the hooks that I needed.</p>

<p>The gist with the code is here: <a href="http://gist.github.com/375621">[http://gist.github.com/375621](http://gist.github.com/375621)</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Remove an Environment Variable in Bash]]></title>
    <link href="http://subakva.github.com/blog/2009/11/25/remove-an-environment-variable-in-bash/"/>
    <updated>2009-11-25T01:13:27-05:00</updated>
    <id>http://subakva.github.com/blog/2009/11/25/remove-an-environment-variable-in-bash</id>
    <content type="html"><![CDATA[<p><code>export -n RAILS_ENV</code></p>

<p>Setting an environment variable to nothing is not the same as removing it entirely. If really need it to go away completely, use the <code>-n</code> flag on <code>export</code>.</p>

<p><strong>Behold:</strong></p>

<pre><code>&lt;code&gt;
jason@idaho:~/Code/subakva$ env | grep RAILS_ENV
jason@idaho:~/Code/subakva$ export RAILS_ENV=development
jason@idaho:~/Code/subakva$ env | grep RAILS_ENV
RAILS_ENV=development
jason@idaho:~/Code/subakva$ export RAILS_ENV=
jason@idaho:~/Code/subakva$ env | grep RAILS_ENV
RAILS_ENV=
jason@idaho:~/Code/subakva$ export -n RAILS_ENV
jason@idaho:~/Code/subakva$ env | grep RAILS_ENV
jason@idaho:~/Code/subakva$
&lt;/code&gt;
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RunCodeRun]]></title>
    <link href="http://subakva.github.com/blog/2009/11/15/runcoderun/"/>
    <updated>2009-11-15T11:57:08-05:00</updated>
    <id>http://subakva.github.com/blog/2009/11/15/runcoderun</id>
    <content type="html"><![CDATA[<p>For a personal project, I&#8217;m trying out <a href="http://runcoderun.com">RunCodeRun</a>, a service for doing automated builds for projects on <a href="http://github.com">github</a>.</p>

<p>I think the idea is a good one. For gems or simple web apps without complicated integration tests, getting an automated build up and running is dead simple. It&#8217;s just a matter of adding a post-commit hook to your github project to notify runcoderun that the code has been updated.</p>

<p>I&#8217;ve run into a few issues with missing gems on the build machine, but they&#8217;ve been incredibly responsive. After posting a support request to install a gem, they not installed the gem I requested; they also installed a gem I didn&#8217;t know was missing, forked my project to fix a gem dependency problem and a database configuration problem, and sent me a pull request. This is all within 24 hours, and for a service I&#8217;m not even paying for!</p>

<p>The service is free for Open Source code, but they have a paid build option for private projects with dedicated build resources. I haven&#8217;t used the paid service, so I&#8217;m not sure to what extent they support more complex requirements like multiple database connections, system services (Sphinx), and distributed systems.</p>

<p>Hopefully, if <a href="http://thinkrelevance.com">Relevance</a> is dedicating the resources to provide such great support, they&#8217;ll also be improving the flexibility of the service for more complex builds. I doubt it would work in its current state for my current professional work, but I&#8217;d love to be able to easily outsource my builds.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Cannot Merge? Try committing first.]]></title>
    <link href="http://subakva.github.com/blog/2009/05/29/git-cannot-merge-try-committing-first/"/>
    <updated>2009-05-29T18:05:03-04:00</updated>
    <id>http://subakva.github.com/blog/2009/05/29/git-cannot-merge-try-committing-first</id>
    <content type="html"><![CDATA[<p>I ran into this git error again today:</p>

<pre><code>&lt;code&gt;
Entry 'blah/blah.rb' would be overwritten by merge. Cannot merge.
&lt;/code&gt;
</code></pre>

<p>After messing around with it for a while, I remembered the last time this happened. The solution is to commit your current conflicting changes, then merge afterwards.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sunlight Labs: Blog - Apps for America 2: The Data.gov Challenge]]></title>
    <link href="http://subakva.github.com/blog/2009/05/21/sunlight-labs-blog-apps-for-america-2-the-datagov-challenge/"/>
    <updated>2009-05-21T18:51:32-04:00</updated>
    <id>http://subakva.github.com/blog/2009/05/21/sunlight-labs-blog-apps-for-america-2-the-datagov-challenge</id>
    <content type="html"><![CDATA[<p><a href="http://sunlightlabs.com/blog/2009/05/21/apps-america-2-datagov-challenge/">Sunlight Labs: Blog - Apps for America 2: The Data.gov Challenge</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[URI.join v. File.join]]></title>
    <link href="http://subakva.github.com/blog/2009/05/15/urijoin-v-filejoin/"/>
    <updated>2009-05-15T19:12:00-04:00</updated>
    <id>http://subakva.github.com/blog/2009/05/15/urijoin-v-filejoin</id>
    <content type="html"><![CDATA[<p><code>URI.join</code> does not work quite the same way as <code>File.join</code> in Ruby. The aim of <code>URI.join</code> is more to calculate a relative path (as a browser would) than to simply concatenate path elements cleanly. The irb output below demonstrates this:</p>

<p>`</p>

<pre><code>irb&gt; require 'uri' #=&gt; true
irb&gt; host = 'http://www.example.com' #=&gt; "http://www.example.com"
irb&gt; prefix = 'prefix' #=&gt; "prefix"
irb&gt; file = 'file.html' #=&gt; "file.html"
irb&gt; URI.join(host, prefix, file).to_s #=&gt; "http://www.example.com/file.html"
irb&gt; URI.join(host, prefix+ '/', file).to_s #=&gt; "http://www.example.com/prefix/file.html"
</code></pre>

<p>`</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sinatra Hacking at RailsConf]]></title>
    <link href="http://subakva.github.com/blog/2009/05/08/sinatra-hacking-at-railsconf/"/>
    <updated>2009-05-08T16:21:33-04:00</updated>
    <id>http://subakva.github.com/blog/2009/05/08/sinatra-hacking-at-railsconf</id>
    <content type="html"><![CDATA[<p>I played around with <a href="http://www.sinatrarb.com/">Sinatra</a> a bit at RailsConf and there&#8217;s a tiny spec of open source code to show for it:</p>

<ul>
<li><p><a href="http://subakva.github.com/bourbon">Bourbon</a> - An extension to Sinatra that adds support for <a href="http://wiki.github.com/tobi/liquid">Liquid</a> templates.</p></li>
<li><p><a href="http://github.com/subakva/colorurl/tree/master">ColorURL</a> - A simple Sinatra application that displays a page in the color of the URL path. It uses the <a href="http://color.rubyforge.org/">color</a> gem and is deployed on <a href="http://www.heroku.com">Heroku</a>. [<a href="http://colorurl.heroku.com/mauve">[http://colorurl.heroku.com/mauve](http://colorurl.heroku.com/mauve)</a>]</p></li>
</ul>

]]></content>
  </entry>
  
</feed>
